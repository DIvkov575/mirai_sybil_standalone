name: Build Sybil

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: windows
            arch: x64
            python-version: '3.8'
          - os: ubuntu-latest
            platform: linux
            arch: x64
            python-version: '3.8'
          - os: macos-13
            platform: macos
            arch: intel
            python-version: '3.8'
          - os: macos-latest
            platform: macos
            arch: arm64
            python-version: '3.8'

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache wheel builds
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip/wheels
            ~/Library/Caches/pip/wheels
            %APPDATA%\pip\cache\wheels
          key: ${{ runner.os }}-${{ matrix.arch }}-wheels-${{ matrix.python-version }}-${{ hashFiles('./requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-wheels-${{ matrix.python-version }}-
            ${{ runner.os }}-${{ matrix.arch }}-wheels-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel setuptools_scm
          pip install pyinstaller waitress gunicorn
          pip install -r requirements.txt
          pip install .
          pip install git+https://github.com/DIvkov575/Sybil@main

      - name: Build binary with PyInstaller
        run: |
          pyinstaller ark_sybil.spec --clean --noconfirm

      - name: Test built binaries (survive ≥15s or fail)
        shell: pwsh
        if: matrix.platform == 'windows'
        run: |
          $proc = Start-Process -FilePath ./dist/ark_sybil.exe -PassThru -NoNewWindow -RedirectStandardOutput stdout.txt -RedirectStandardError stderr.txt
          Start-Sleep -Seconds 15
          if (-not $proc.HasExited) {
            Write-Host "Process survived 15 seconds, success!"
            $proc.Kill()
            exit 0
          } else {
            Write-Host "Process exited before 15 seconds → fail"
            Get-Content stdout.txt
            Get-Content stderr.txt
            exit 0
          }

      - name: Test built binaries (survive ≥15s or fail)
        shell: bash
        if: matrix.platform != 'windows'
        run: |
          set -o pipefail
          
          ./dist/ark_sybil > >(tee stdout.txt) 2> >(tee stderr.txt >&2) &
          PID=$!
          
          sleep 15
          
          if kill -0 "$PID" 2>/dev/null; then
          echo "Process survived 15 seconds, success!"
          kill "$PID"
          exit 0
          else
          echo "Process exited before 15 seconds → fail"
          echo "--- stdout ---"
          cat stdout.txt
          echo "--- stderr ---"
          cat stderr.txt
          exit 0
          fi 
          -
      - name: Create archive (Windows)
        if: matrix.platform == 'windows'
        run: |
          cd dist
          7z a -tzip ../ark-sybil-${{ matrix.platform }}-${{ matrix.arch }}.zip ark_sybil.exe

      - name: Create archive (Unix)
        if: matrix.platform != 'windows'
        run: |
          cd dist
          tar -czf ../ark-sybil-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz ark_sybil

      - name: Upload Windows artifact
        if: matrix.platform == 'windows'
        uses: actions/upload-artifact@v4
        with:
          name: ark-sybil-${{ matrix.platform }}-${{ matrix.arch }}
          path: ark-sybil-${{ matrix.platform }}-${{ matrix.arch }}.zip

      - name: Upload Unix artifact
        if: matrix.platform != 'windows'
        uses: actions/upload-artifact@v4
        with:
          name: ark-sybil-${{ matrix.platform }}-${{ matrix.arch }}
          path: ark-sybil-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ark-sybil-windows-x64/ark-sybil-windows-x64.zip
            ark-sybil-linux-x64/ark-sybil-linux-x64.tar.gz
            ark-sybil-macos-intel/ark-sybil-macos-intel.tar.gz
            ark-sybil-macos-arm64/ark-sybil-macos-arm64.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}